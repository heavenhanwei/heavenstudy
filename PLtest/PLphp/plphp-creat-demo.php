<?php

// autoload.php @generated by Composer

//require_once __DIR__ . '/composer' . '/autoload_real.php';

require_once 'pili-sdk-php/lib/Pili.php';

define('ACCESS_KEY', 'U_vrtWYXXafFOFgZjPsTtiOh0t5AZF0RAhqyq7DL');
define('SECRET_KEY', 'q4TLb5HvlO4sQeHLktnSzWy6rYw2YSiuFFGQ6nwn');

define('HUB', '10minute');

$credentials = new \Qiniu\Credentials(ACCESS_KEY, SECRET_KEY); #=> Credentials Object
$hub = new \Pili\Hub($credentials, HUB); # => Hub Object


try {
    $title           = NULL;     // optional, auto-generated as default
    $publishKey      = NULL;     // optional, auto-generated as default
    $publishSecurity = NULL;     // optional, can be "dynamic" or "static", "dynamic" as default
    
    $stream = $hub->createStream($title, $publishKey, $publishSecurity); # => Stream Object
    
    
    /*
    echo "createStream() =>\n";
    var_export($stream);
    echo "\n\n";
    /*
    echo $stream->id;
    echo $stream->createdAt;
    echo $stream->updatedAt;
    echo $stream->title;
    echo $stream->hub;
    echo $stream->disabled;
    echo $stream->publishKey;
    echo $stream->publishSecurity;
    echo $stream->hosts;
    echo $stream->hosts["publish"]["rtmp"];
    echo $stream->hosts["live"]["rtmp"];
    echo $stream->hosts["live"]["http"];
    echo $stream->hosts["playback"]["http"];
    */

} catch (Exception $e) {
    echo 'createStream() failed. Caught exception: ',  $e->getMessage(), "\n";
}


try {
    $streamId = $stream->id;
    $stream = $hub->getStream($streamId); # => 获得 Stream 对象
    /*
    echo "getStream() =>\n"; # => 打印stream信息
    var_export($stream);
    echo "\n\n";
    */
} catch (Exception $e) {
    echo "getStream() failed. Caught exception: ",  $e->getMessage(), "\n";
}


$publishUrl = $stream->rtmpPublishUrl();
echo "Stream rtmpPublishUrl() =>\n";
echo $publishUrl;
echo "\n\n";

$result = $stream->toJSONString(); # => string
echo "Stream toJSONString() =>\n";
var_export($result);
echo "\n\n";



?>

